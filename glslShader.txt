const flowmapFragmentShader = `
uniform float power;
uniform float time;
uniform sampler2D albedoMap;
uniform sampler2D flowMap;
uniform float flowSpeed;
uniform float cycleTime;

varying vec2 vUv;

void main()
{
	vec2 flowDirection = (texture(flowMap, vUv).rg - 0.5) * power;

	float t1 = time / cycleTime;
	float t2 = t1 + 0.5;
	float cycleTime1 = t1 - floor(t1);
	float cycleTime2 = t2 - floor(t2);
	vec2 flowDirection1 = flowDirection * cycleTime1 * flowSpeed;
	vec2 flowDirection2 = flowDirection * cycleTime2 * flowSpeed;
	vec2 uv1 = vUv + flowDirection1;
	vec2 uv2 = vUv + flowDirection2;
	vec4 color1 = texture(albedoMap, uv1);
	vec4 color2 = texture(albedoMap, uv2);
	
	gl_FragColor = mix(color1, color2, abs(cycleTime1 - 0.5) * 2.0);
}`;